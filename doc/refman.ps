%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86f Copyright 2001 Radical Eye Software
%%Title: refman.dvi
%%Pages: 2
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 596 842
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips refman.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.07.21:2013
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 55379997 39157999 1000 600 600 (refman.dvi)
@start
%DVIPSBitmapFont: Fa skakf10 10 1
/Fa 1 89 df<00F015386C157C6C15FC007EEC01F86CEC03F06C6CEB07E06C6CEB0FC06C
6CEB1F806C6CEB3F006C6C137E6C6C5B90387E01F86D485A90381F87E090380FCFC06DB4
5A6D90C7FC6D5A6D5A497E497E497F90380FCFC090381F87E090383F03F090387E01F849
6C7E4848137E48487F4848EB1F804848EB0FC04848EB07E048C7EA03F0007EEC01F848EC
00FC48157C0070153826257AA432>88 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb skak10 10 1
/Fb 1 79 df<0104131801071338903805C06C90380460C4EC3984EC0F06EC0E02903806
3803903902E001F890390380000F0106C7EA01C049EC007049151C4915064981496F7E49
6F7ED981C01560D9838015200187163091C97E018E160801980220130CD80180160490C8
1406481702000203601303000603407F000415C0000C4A481480484AC8FC00105C003002
1D15C0002002311540006014E10040D90381156000C0D90E011520008C1338009CEB6003
DAC002153026980180161000C0EB0006D840031304D86042130CD830C601081518D81F84
01181508D8030C5BD801985BD800F05B90380001804AC9120C020616045C140814181410
14301420A5023FB712FC3E3F76C853>78 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi10 10 2
/Fc 2 63 df<EF0380EF0FC0173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FC
ED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF
80D803FECAFCEA0FF8EA3FE0EA7F8000FECBFCA2EA7F80EA3FE0EA0FF8EA03FEC66C7EEB
3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE
923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0170FEF0380323279AD41>60
D<126012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE
01FF9338007F80EF1FC0A2EF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED
1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA
07FCEA3FF0EA7FC048CBFC12FC1270323279AD41>62 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmti10 10 3
/Fd 3 117 df<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39
383FF00114E0007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F
00015D5B151F5E12034990383F8380160316070007027F130049137EA2160E000F147C49
141E161C5E001FEC3C7849EB1FE00007C7EA0780292679A42F>110
D<147F903803FFC090380FC1F090381F00F8017E137C5B4848137E4848133E0007143F5B
120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0
140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F03803FFC0C648C7FC202677
A42A>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC3800FC
00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078147014
F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>116
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmssi10 10 44
/Fe 44 122 df<EC0FE0EC3FF0027FEB1FC002FFEB3F805B903803F860903807E020010F
9038007F005C011F91C7FC5C133FA349C9FCA513FEA3007FB5EA01FCA2B548485AA33801
FC004848495AA54848495AA54848495AA54848495AA4484849C7FCA548C712FEA500FE49
5AA22A3B78BA2D>12 D<EA1FC0A5EA3F80A21207EA0F00120E121E121C123C1238127812
705A0A117A8617>44 D<B512FCA516057B941C>I<1706171FA2173EA2177CA217F8A2EE
01F0160317E0EE07C0A2EE0F80A2EE1F00A2163E167E167C5EA24B5AA24B5AA24B5AA24B
5A151F93C7FC153EA25DA25DA24A5A14035D4A5AA24A5AA24AC8FCA2143E147E147C5CA2
495AA2495AA2495A130F5C49C9FCA2133EA25BA25B12015B485AA2485AA2485AA248CAFC
5A123E5AA25AA25A126030537FBD2A>47 D<EC07F8EC3FFF91B512804914C04914E09039
0FF81FF090391FE007F8ECC003EB3F8090397F0001FC13FE5B000114005B12035B1207A2
5B120F15015B121FA349EB03F8123FA448C7EA07F0A4ED0FE0127E12FEA2ED1FC0A3ED3F
80A2ED7F00A215FEA2007E495A007F495A14076D485A6C6C485A9038F07FC06CB55A6C91
C7FC6C13FC000113F038007F80263A79B72A>I<15181578EC01F01407143FEB3FFFA215
E05B148FEB000FEC1FC0A5EC3F80A5EC7F00A414FEA5495AA5495AA5495AA4495AA5495A
A2007FB512F0B6FCA315E01D3878B72A>I<0103B612805BA449150002E0C8FCA4495AA5
495AA490387F07F0EC3FFC91B5FC82829039FFF03FE0ECC01F9138000FF04913075B0001
81C8FCA84B5AA34B5AA200084A5A121C003C4A5A007E4AC7FCB4495A397F8007FC393FF0
1FF890B55A6C5C6C5C000391C8FC6C13FC38003FE029387CB52A>53
D<EC03FC91381FFF80027F13C091B512F013034914F890390FFC07FC90381FE0019138C0
00FE495A49C7127E137E13FE5BA3484814FCA26C6CEB01F8A2ED03F0017EEB07E0017FEB
0FC090393F803F8090391FFFFE00010713F8010113C0497F011F13FC90387FC3FE9038FE
007FD803F8EB3F804848EB1FC04848130F484814E05B003F140748C7FC16F0ED0FE012FE
A3ED1FC0A2153F16806CEC7F005D6C6C485A9038C007FC393FF01FF890B55A6C5C6C1480
000391C7FC6C13FC38003FC0273A7AB72A>56 D<16FFA24B7F5DA25D16DFED0F9FA29238
1F1FC0153FA2157EA215FC83EC01F8140315F0EC07E0A291380FC00F83EC1F80143F1500
5C147E14FE4A6D7E495A13035C13075C130F91B67E5B5BA25B017EC7120313FE49810001
1501485A5B12075B000F825B001F81485AA248C9FC127E00FE17805A313A7DB937>65
D<010FB512F8EEFF8017E0834915FC9139E0003FFE1607EE01FF7013804948147FA2173F
A2495AA4EF7F0049C85A4C5A4C5A4C5A4C5A4848EC3FE04BB45A90B7C7FC16FC4815E016
FC16FF9026FC001F13C003007F4848EC3FF0EE0FF81607707EA24848140183A35F485AA2
16035F484814074C5A4C5AEE7FC04C5A4848010790C7FCED3FFE90B65A16F016C0B648C8
FC15F0313A79B937>I<923807FF80033F13F84AB512FE0207ECFF80021F15005C9138FF
F803499038C0003E4990C7120ED907FC1404494891C7FC495A495A495A495A91CAFC485A
485AA2485AA2485AA2485AA2485AA4485AA648CBFCA37F127FA57F123F7F121F7F6C6C5C
6D14076C6C141F6C6C147E6C9038E007FE6C90B5FC6D5C6D14F0010F14C0010391C8FC90
38007FF0313C76BA35>I<010FB7FCA44915FEA202E0C8FCA3495AA4495AA549C9FCA548
5AA290B71280A2481600A301FCC9FCA2485AA5485AA5485AA4485AA548B612FEA5B75AA2
303A78B932>69 D<010FB7FCA44915FEA202E0C8FCA3495AA4495AA549C9FCA5485AA390
B612FE485DA401FCC9FC485AA5485AA5485AA4485AA5485AA548CAFCA2303A79B92F>I<
D90FE0EC01FFEF03FEEF07F8EF0FF04948EC1FE0EF7FC0EFFF804C13004C5A4948EB07F8
4C5AEE3FE04C5A49C7485A4B90C7FC4B5AED07F84B5A01FEEB3FE04B5A4B5A4A90C8FCEC
03FC3801FC074A7E143F4A7E4848B5FC01F96D7EEBFBFC9038FFF83F02F07F48EBE01F02
C07FEC800F02007F01FC13074848804913034980A2150148488015008282484881163F83
161F8348C8FC160F8316078300FE150383383A78B93A>75 D<D90FFEEC01FCA280A249ED
03F8A2ECDF80A3D93F9FEC07F0EC8FC0A3D97F0FEC0FE0811407A28101FEED1FC0A21403
81A2D801FCED3F80140181A2D803F8ED7F00140081A34848017E13FE157FA3814848EC81
FCA2151FA216C14848ECC3F8150FA34848ECE7F01507A448C73803EFE016FFA281A200FE
5EA2363A78B93B>78 D<010FB512FCEEFF8017E017F849819139E0001FFEEE03FF827013
804948147FEF3FC0A34948141FA4173F49C81380A2177F180017FE484814014C5A4C5AEE
1FF04848EC7FE0923803FFC090B75A4CC7FC16F84815E04BC8FC01F8CAFCA3485AA5485A
A4485AA5485AA548CBFCA2323A79B935>80 D<ED0FF8ED7FFF0203B512C04A80021F14F8
91397FF01FFC9139FFC007FE49EB0001D903FC6D7E494815804948147F4948EC3FC0495A
4948141F91C813E05B485A49ED0FF01203485AA2485AA25B121FA2485AA3EF1FE0485AA4
EF3FC048C9FCA2EF7F80A218005FA24C5A6C5E9039800FF0034C5AEC07F84C5A6C6C6C6C
485A4C5AD81FE013FE0201495AD80FF090B5C7FC6D6C5B6C6C5C6C6CEB7FF06D6C485AC6
90B55A6D807F010F800101131F90C76C7EA26F7E821503828183344676BB3D>I<010FB5
12F8EEFF8017E08349819139E0001FFCEE07FEEE01FF824948EC7F80A2173FA2495AA317
7F180049C8FC17FE16014C5A4C5A48484A5AEE3FE0923803FFC090B75A484BC7FC16F816
E016809038FC003F484880A2151F82A24848130F82A26F7EA24848130382A21501484880
A2150082A248486E7EA3707EA248C8FC707E313A78B936>I<ED3FF00203B5FC020F14C0
023F14F04A14F849B612F049EB803F903907FC00074948EB01E002E01300494814404948
1400A249C9FCA2137E13FEA37FA38080EB7FF014FF6D13F06D13FE6F7E0107806D806D80
D9003F7F02077FEC007FED0FFE150315018281A45EA44B5AA200204A5A123000384A5A00
7E4A5A007F143FD8FFC0495A9039FC03FF806CB6C7FC6C14FC000F5C000314E0C61480D9
0FFCC8FC2D3E7BBB2E>I<EC7FFFA3ECFFFEA2ECFE005CA21301A25CA31303A25CA21307
A35CA2130FA35CA2131FA25CA2133FA391C7FCA25BA3137EA213FEA25BA31201A25BA212
03A35BA21207A25BA3120FA25BA2121FA35BA2123FA390C8FCA25AA2127EA2EAFFFEA520
537DBD18>91 D<EC7FFFA3ECFFFEA21400A315FCA21401A315F8A21403A215F0A21407A3
15E0A2140FA315C0A2141FA21580A3143FA21500A25CA3147EA214FEA35CA21301A25CA2
1303A35CA21307A35CA2130FA25CA3131FA25CA2133FA391C7FCA25BA2EAFFFEA5205383
BD18>93 D<EC7FC0903803FFF0010F13FC013F7F90B5FCEC00FF01F8EB7F8001E0133F48
5AC8FCED1FC0A21680153FA591380FFF000103B5FC133F90B6FC000380000FEB00FEEA1F
F8EA3FC0485A49485A12FEA314034A5A6C131FEBC07F6CB5FC14FB6C495A6C1387D807F8
C8FC22287BA628>97 D<EB0FE0A4495AA5495AA449C8FCA513FEA2EC01FCEC1FFF027F13
804848B512C090B612E0ECE03F9138801FF048EB000F01FCEB07F8491303A3485A16FC15
01ED03F8A2485AA4ED07F0485AA2ED0FE0A24848EB1FC0A2ED3F80157F6DEBFF00007F49
5A9038E007FC9038F81FF890B55A6D5BD8FE3F13806D48C7FC380007F8263B7AB92B>I<
EC1FF0ECFFFC010313FF010F14804914C090383FE01F90387F80079039FE000380484813
01484890C7FC485AA2485A485AA25B123FA248C9FCA5127E12FEA2127E127FA315046C6C
131C6D1378391FE001F8EBF00F6CB5FC6C14E06C1480C649C7FCEB3FE022287AA625>I<
EE1FC0A4EE3F80A5EE7F00A416FEA54B5AA2147F903803FFE1010F13F149EBFBF84913FF
90387FE07F9038FF801F4848486C5A48481307485A5B485A001F4A5A5BA2485AA248C748
5AA500FE4A5AA44BC7FC127FA25D6D5A003F495AEBC007381FF03FEBFFFE6C13FC6CEBF1
FC6C13C1C66CC9FC2A3B7AB92B>I<EC3F80903801FFE0010713F8011F7F497FEBFF8139
01FE007F48487F5B48487F48481480485A49130F123F90C7FC5A90B6FC1600B7FCA300FC
C9FCA77EA2127F15186D1370393FC001F0381FF00F90B5FC6C14C000035C6C01FCC7FC38
003FE021287AA625>I<EC03FCEC1FFF5C91B5FC5B903803FC0E903807F00290380FE000
5C131F5C133FA349C7FCA513FEA3003FB5FCA2485BA3D801FCC7FC485AA5485AA5485AA5
485AA4485AA548C8FCA512FEA2203B79BA19>I<DA01F8137E91390FFE07FE91383FFFBF
4A13FF91B6FC903A01FC0FFC00903903F007F0903807E003EB0FC0A2EB1F80A2EB3F00A4
4B5AA24B5AA24B5A6D6C48C7FCECE0FF49B45A15F8017B5B01F913C0D9F07FC8FC91C9FC
1201A37F6CB512F815FF16C0000315F05A3A0FE0001FF84848130348486D7E90C7FC007E
1400A300FE4A5AA2007E4A5A007F140FD83FC0EB3FE09039F801FFC06CB6C7FC6C5C0003
14F8C614C0D91FFCC8FC2F3880A52A>I<EB0FE0A4495AA5495AA449C8FCA513FEA2EC01
FC91380FFF80023F13C048484813E001FDB5FC9038FFF03F9138C00FF048138014004913
075BA24848EB0FE0A25BA34848EB1FC0A54848EB3F80A44848EB7F00A548C712FEA500FE
495AA2243A7AB92B>I<EB1FE0A3EB3FC0A590C7FCAC13FEA2485AA4485AA5485AA5485A
A5485AA4485AA548C7FCA512FEA213397AB814>I<EB0FE0A4495AA5495AA449C8FCA513
FEA3ED03FCED07F84848EB0FF0ED3FE0ED7FC0EDFF004848485A4A5A4A5AEC1FF04A5A39
07F07F804AC7FCEBF1FEEBF7FCEBFFFE5A80A280496C7EEA1FFC9038F01FC013E0496C7E
EA3F806E7EA26E7EA248486C7EA28114008100FE801680263A7AB929>107
D<EB0FE0A4EB1FC0A5EB3F80A4EB7F00A513FEA5485AA4485AA5485AA5485AA5485AA448
5AA548C7FCA512FEA2133A7AB914>I<DA01FCEB03F8903BFE0FFF801FFF023FD9C07F13
804848486DB512C001FDB512E3903BFFF03FE7E07F913BC00FFF801FE048018014000200
5B496D48130F495CA248484948EB1FC0A2495CA348484948EB3F80A548484948EB7F00A4
484849C712FEA548C700FE495AA500FE4948495AA23B267AA542>I<EC01FC9039FE0FFF
80023F13C048484813E001FDB5FC9038FFF03F9138C00FF048138014004913075BA24848
EB0FE0A25BA34848EB1FC0A54848EB3F80A44848EB7F00A548C712FEA500FE495AA22426
7AA52B>I<EC0FF0EC7FFC0103B5FC491480011F14C090393FE03FE090397F800FF09038
FE00074848EB03F8485A4848EB01FCA2485A491300121F5B123F150148C7FCA4ED03F85A
A2ED07F07EED0FE0151F16C06DEB3F80003FEC7F006D5B391FE003FE390FF80FF890B55A
6C5C000114806C49C7FCEB1FF026287BA62A>I<ED3F8090391FC3FFE002CF7F49487F91
B57EECFC0F9138F003FE90387FE00191388000FF91C7FC82A213FE1780A21700A2485AA4
16FE485AA24B5AA24848495A15075E150F6D495A000FEC7FC06D495AD9FF0790C7FCECFF
FE01EF5BD81FC713F001C313C001C090C8FC91C9FC485AA548CAFCA512FEA429367DA52B
>I<91387F01FC903801FFE1010713F1011FEBFBF84913FF90387FE07F9038FF801F2601
FE0013F04848130F485A5B485A001F15E05BA2485AA248C7EA1FC0A548EC3F805AA27EED
7F007EA26D5B5C6C6C485AEBE007381FF83FEBFFFE6C13FC6CEBF1FC6C13C1C613011300
4A5AA54A5AA54A5AA426367AA52B>I<15F0EBFC07141F3901F87FE014FF13F99038FBFE
003803F7F0EBFFE0148091C7FC5B485AA25B5BA2120F5BA4485AA4485AA548C8FCA512FE
A21C267AA51C>I<EC7FC0903803FFF8010F13FE49EBFF8049140049C67E01FC131E4848
130692C7FC485AA47FA213FF14F06C13FE6E7E6C806D7F131F01037FEB001F14076E7EA2
5DA312200070495A1278007EEB1FC039FFC07F8090B5C7FC6C5B001F5B000713F0C61380
21287DA620>I<EB3F80A249C7FCA513FEA3007FB51280A2B61200A3D801FCC7FC485AA5
485AA5485AA5485AA4485AA514201460EBC3E0EBFFF05C5C6C48C7FCEA0FF0193078AE1E
>I<D803F8EB07F0A24848EB0FE0A44848EB1FC0A54848EB3F80A54848EB7F00A548C712
FEA400FE495AA3140314074A5A143F6C13FF90B5FC14F36CEBC7F06C1307D80FF0C8FC24
2678A42B>I<00FEEC1FC0A26CEC3F807EED7F00A215FE5D14016D485A123F4A5AA24A5A
5D141F5D381FC03F4AC7FCA214FE5C13C15CEA0FC35C13C75C5C13CF5CEA07DF91C8FC13
FF5B5BA2222577A426>I<00FED901FCEB01F80203140318F04A6C130703BE14E06CD90F
3E130F6C027E14C0021F141F021E1580023E143F023C1500027C5C177E02F814FE5FD901
F013015F903903E03E03003F023F5BD907C013075F0280130F010F5D0200131F495D131E
4CC7FC5B167E5B001FEC3E7C017014FCED1EF849131F5E5B5E352577A439>I<017FEC0F
E080EE1FC0133FEE3F80EE7F008016FE131F4B5AA24B5A6E485A130F4B5AA24B5A5E0107
133F02F090C7FC5D157E5D1303ECF1F8A2ECF3F05D1301ECF7C0A25D92C8FC6DB4FC5CA2
5CA2495A5C13035C1307495A5C131F49C9FCEA403EEA70FEEA7FFC485A5B13C0EA3F802B
3680A426>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmr10 10 61
/Ff 61 125 df<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007
017E497EA25BA2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C49
7E267FFFE0B512C0A32A3B7FBA2E>12 D<121C127FEAFF80A213C0A3127F121C1200A412
011380A2120313005A1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB0380
EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65A
B2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380
EB01C0EB00E01460135278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA213
78A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400
A25B131EA2133E133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527C
BD20>I<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E
5A5A5A12600A19798817>44 D<B512FCA516057F941C>I<121C127FEAFF80A5EA7F0012
1C0909798817>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F048481378000714
7C48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580
A36C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB
03F8233A7DB72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB5
12F0A31C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E
486D7E123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D
4A5A5D140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B491303
48481400485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF
4913C03901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC8
5A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E
7EED7F80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070
ECFF006C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A
>I<1538A2157815F8A2140114031407A2140F141F141B14331473146314C313011483EB
030313071306130C131C131813301370136013C01201EA038013005A120E120C5A123812
305A12E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780
133C9038F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE903878
0F803907E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490
C71300485C12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F8000
01B5C7FC38007FFCEB1FE0213A7CB72A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C
127FEAFF80A5EA7F00121C092479A317>58 D<1538A3157CA315FEA34A7EA34A6C7EA202
077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C0
7F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA3
496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E
>65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA283A7
5F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E70
7E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C0
94C7FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF807E0790
3A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F1201484815
1F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180
A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD9
1FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002011380
313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E
707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2
171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036
397DB83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706A317
078316C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E0
93C712C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397DB839
>I<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2
ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0
B612C0A32F397DB836>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>
73 D<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C
5A4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C
7E4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E70
7EA2707E707F8484486D497FB6011FEBFF80A339397DB841>75 D<B612E0A3000101C0C8
FC6C90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FC
A32D397DB834>I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3
D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA3
6E6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F
06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2
ED018045397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706
EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E1680
80ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2
EE1FF6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA2
170637397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D
7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1F
C0A2001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA300
3F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A01
7F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE002
0390C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE
07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801
FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<EC03FF021F13E09138FE01
FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7EA2
4848157F0007178049153F000F17C049151F001F17E0A24848ED0FF0A3007F17F8A24915
07A200FF17FCAC007F17F8A26D150FA2003F17F0A26C6CED1FE0A36C6CED3FC00007027C
14804AB4FC3C03F80383807F003B01FC0701C0FEEC0E002600FE0CEBE1FC017FEC63F8D9
3F8CEB77F0D91FCCEB3FE0D907EE14806DB449C7FC0100D981FC130CEC1FFF0203131C91
C7001E131C161F183CEF807CEFC0F8EE0FFFA318F08218E07013C07013809338007E0036
4B7BBA41>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2
707EA283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03
F8ED00FE82707E707EA2161F83A583A6F00180A217F8160F1803486D01071400B66D6C5A
04011306933800FE0ECAEA3FFCEF07F0393B7DB83D>I<D90FF813C090383FFE0190B512
813903F807E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C1403
12FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FE
C680013F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A2
1501A37EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13
FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F27
3E0001FE130348EE01F00078160000701770A300601730A400E01738481718A4C71600B3
B0913807FF80011FB612E0A335397DB83C>I<B6903807FFFEA3000101809038007FE06C
90C8EA1F80EF0F001706B3B2170E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C
6D6C495A6D6CEB07806D6C49C7FC91387F807E91381FFFF8020713E09138007F80373B7D
B83E>I<B5D8FC07B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E0
00010307ED03C01B807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A
6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C
6F485AEE6007A26D6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C1150EDA3F
C3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E
4B140FA202015E4B1407A2020093C8FC4B80503B7EB855>87 D<007FB590383FFFFCA3C6
01F801071380D97FE0D903FCC7FC013FEC01F06D6C5C5F6D6C5C6D6C13034CC8FC6D6C13
06160E6D6C5B6DEB8018163891387FC0306E6C5A16E06E6C5A91380FF18015FB6EB4C9FC
5D14036E7EA26E7F6F7EA24B7E15DF9138019FF09138038FF8150F91380607FC91380E03
FE140C4A6C7EEC38000230804A6D7E14E04A6D7E49486D7E130391C76C7E01066E7E130E
010C6E7E011C1401013C8101FE822607FF80010713E0B500E0013FEBFF80A339397EB83E
>I<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C
5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA3
1401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F80
07C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F380
1F809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E
16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E90
3800FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813
F83907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E12
7FA26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C09038
1FFF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E07
8F9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA
127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F
90381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F0
01F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FC
A5127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C137090
387E03E090381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F87
90383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFF
F8A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE039
03E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A
6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF8048
15C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03
E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA5
2A>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EB
F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0F
E0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>
I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C
127E00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03
F012FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E
1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E15
7F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3
B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01
E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0
A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF0
00FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A348
6C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F848
48137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8
A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC6
6C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF890
38F1E07E9039F3801F803A0FF7000FC0D803FEEB07E049EB03F04914F849130116FC1500
16FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F00
9038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090
381FFE0190387E07819038FC01C33903F000E3000714774848133749133F001F141F485A
150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF
39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F
00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC00804913
00A45BB3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F48
7F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F010713
80EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38
E1FFF038C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6
FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB2
20>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F
0000EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B5
38803FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D13
0E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FB
C7FCA214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF800903800
0FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA201
7E9038EFC00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260F
C6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA2010014
1E4A130E0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7
FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F80
4A7E8114CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F
496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF800
0FF06C48EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2EC
C070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430
A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027
357EA32C>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1F
C0EC3F800060137F150014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2
485A485A0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F24
7EA325>I<BD12C0A25202809653>124 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmsy10 10 4
/Fg 4 111 df<EC01F8140FEC3F80ECFC00495A495A495AA2130F5CB3A7131F5C133F49
C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E131F80130FB3A7801307
A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102 D<12FCEAFFC0EA07F0EA01FCEA
007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC1FF0EC07F8EC1FF0EC7E00495A
495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA07F0EAFFC000FCC8FC1D537ABD
2A>I<126012F0B3B3B3B3A91260045377BD17>106 D<126012F07EA21278127CA2123C12
3EA2121E121FA27E7FA212077FA212037FA212017FA212007FA21378137CA2133C133EA2
131E131FA27F80A2130780A26D7EA2130180A2130080A21478147CA2143C143EA2141E14
1FA2801580A2140715C0A2140315E0A2140115F0A2140015F8A21578157CA2153C153EA2
151E150C1F537BBD2A>110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmssbx10 12 31
/Fh 31 123 df<92380FFFF04AB612C0020F15F8027F15FF49B8FC13075B495E137F90B8
FC489138FE003F03E0130748028013004849C8127C4A151C4849150C4A92C7FC485BA248
5BA25C5AA291CBFCA3B5FC5BAF7F7EA380A27E80A26C7FA26C6DED01806E15036C6D150F
6E151F6C6D6C147F6C02E0903801FFC003FE131F6C91B7FC7F131F7F6D170001015E6D6C
15F8020F15E0020192C7FCDA000F13F03A477AC546>67 D<003FB612F848EDFFC0B812F8
17FE717E18E084848449C76C7F040F7F040114807014C0173F7113E08319F0837113F8A3
8319FCA283A319FEB019FCA25FA319F85FA24D13F0A25F4D13E05F4D13C04CB512801607
047F140090B85A606018E06095C7FC17F86C16C06C03F8C8FC3F4577C44F>I<92380FFF
F04AB6FC020F15E0027F15FC49B8FC010717C05B5B137F90B91280489138FE003F03E013
0748028013004849C8127F4A151F4849ED0F004A8148498195C7FC485BA25C5AA291CBFC
A3B5FC5BA9040FB512E0A67F7EA36EEB0007A27E80A26C7FA26C7F806C7F806C6D7E6C14
E003FE131F6C91B7FC7F131F7F7F010117806D6CEDFE00020F15F0020192C7FCDA000F13
E03B477AC549>71 D<263FFF80933807FFF8486D5EB56C4C13FCA26E5EA26E5EA36E93B5
FCA26E5DA201F718BF6E5D01F3183F6F5CA301F16DEC0FFEA26F141F01F017FCA26F143F
027F16F86F147FA2023F16F06F14FF021F16E06F5BA2020F16C06F5BA26E1680705A6E16
00705AA26E5DEEE01F6E5DA2EEF03F037F5CEEF87F033F5CA2EEFCFF031F5CA2030F5C93
B5FCA26F5CA26F91C7FCA36F5BA26F5BA2705A705A6C4891C9EA1FF8123F4E4577C461>
77 D<263FFFC0ED7FE0487FB56CEDFFF080A280A280A280A281A201F77FA201F37FA201
F17FA201F07FA26E7EA26E7EA26E7EA26E7FA26E7FA26E7FA26E7F82806F7EA26F7EA26F
7EA26F7FA26F7FA26F7FA26F7FA26F7FA2707EA2707EA270B5FCA282A282A282A282A282
6C486F13E0003F823C4577C44F>I<003FB612F04815FFB812E017F817FE83188018C0A2
49C714E0041F13F0827013F88282A218FC82A95E18F8A25E4C13F05E4C13E093B5FC90B8
12C0188018005F17F817E0178004F0C7FC49CAFCB3A76C5A123F364577C446>80
D<EC3FFF0103B512F0010F14FE013F6E7E90B712E04816F85A5A5A5F48EBF0039138C000
3F4890C7120F1607491403007F6F5A491400176094C7FCA37FA27F80806C13F014FF15F0
6C14FF6C15E016F86C15FE6C816C16C06C826D817F010F81010381EB007F020780EC007F
03077F15016F7E701380A282A282A312301238123C007F5D6D160001E05C01F85C01FE91
B5FC9026FFE0035BB8FC5FA25F003F5E6C5E00075EC693C7FC013F14FC010314F0D9003F
90C8FC31497BC63D>83 D<D83FFCED0FFF127F486C4B1380B3B3AE6C6C5D1900A25F6C6D
5D17FF6C6D5D6E13036C01F8495B6C01FF133F92B65A6C5F6C5F6C5F013F93C7FC6D15FC
010315F0D9007F1480020701F0C8FC394777C44C>85 D<903801FFF8011F13FF90B612E0
000381000F15FC82A249C66C7E01F86D1380D807E07F5B496D13C090C7FC1206C8FCA602
07B5FC49B6FC131F137F48B512EF0007EBF80F4813C0481380481300485A5B12FF5BA45D
7F5D6C6C5B92B5FC383FFF8391B6FC6C14EF6C14CF6C148F6CD9FE071380C613F8D93FC0
C8FC2A317DAF34>97 D<EA3FF8127F487EB3A24AB4FC020F13C0027F13F091B512FC90B6
7E821780DAE07F13C0EC001F496D13E0497FA26F13F0A38117F8AF17F05DA44B13E0A26D
4913C06D5BDAC07F138091B612005E5E01FD5CD87FF814E0003F013F1380C7D807FCC7FC
2D467AC438>I<EC7FFC0107B512C0011F14F0017F14FC90B7FC5A5A5A489038F007FE48
EBC0004A137E4890C7121E160E491404007F92C7FCA35B12FFAE127F7FA216036C6C5C16
1F6C6D5B6E13FF6CD9F00F138091B6FC7E7E7E6C6CECFE00011F14F8010714C09026007F
F8C7FC29317CAF31>I<EEFFF0A24B13F8B3A2EB01FF011F13C1017F13F190B512FD0003
91B5FC5A5AECF01F48EBC007EC8001481300A2485AA4485AB0127F7FA36C7E5D6E5A6C6D
5A6CEBF03F91B6FC7E6C14FD6C14F96C6C01F013F0011F13C0D903FEC8FC2D467CC438>
I<EC7FF80103B57E011F14E0017F8090B612FC48815A489038F03FFF48D9C00F1380EC80
0348010014C048804915E0A248487FA217F012FFA25BA390B7FCA317E0A201F8C9FCA37F
127FA37F003F16C016016C6C14036E13076C6DEB1FE06E137F6C9038F803FF6C90B6FC7E
6C1680013FECFE00010F14F8010114E09026003FFEC7FC2C317DAF33>I<EC1FFE49B512
C01307131F5B5B90B6FCECFC0F48EBF8031501ECF000481500AD003FEBFFE05AB67EA36C
5CA2000301F0C7FCB3B36C5B7E22467EC521>I<DAFFF0EB0FC0010F01FF137F013FECC3
FF90B8FC4817E05A48EDFE1F489039E07FFF00DA801F140048496C7FA348486D7FAB6C6C
495BA36C6D4890C7FCECE07F6C90B55A6C5D6C5D485D16C0D8078F91C8FC018013F091CA
FC7FA27F7F6CB612F0EEFF806C16E04816F84882001F82488201F0C7003F138048481407
8248486E13C0A282A46D5CA26C6C4A138001FC140F263FFFC090B512006C90B65A6C5E6C
5E6C5EC66C1580011F4AC7FC010014C033447EAE37>I<EA3FF8127F487EB3A2ED7FC091
3803FFF8020F13FE023F7F4A148091B6FC01FD15C0ECF81F9026FFE00F13E014C04A7E14
00A25BA35BB3AB6C486D13C0123F2B457AC438>I<EA3FFC127FEAFFFEAAEA7FFCA2C7FC
AAEA1FFC123FEA7FFEB3B3A6EA3FFC121F0F467CC519>I<EA3FE0127F487EB3A3ED1FFE
4B7E5D92B5FC4A5B4A5B4A5B4A13E04A5B4A5B4A90C7FC4A5A01F15B01F75B90B55A5D5D
5D92C8FCA28181A2818181A2497F496C7EEBF83F496C7E01E0806E7F806E7F82806E7F82
6F7E153F6F7E1780816C487F003F6E1300294579C435>107 D<EA3FF8127FEAFFFCB3B3
B3ABEA7FF8123F0E457BC419>I<D83FF0D97FE049B47E007F902603FFFC010F13F026FF
F80F01FF013F13FC4A6E487F027F02C1B6FC91B612C301F903E71580DAF80FECE03F9026
FBE0079038EF801FD9FFC0DAFF0014C04A6C497FA202005C495DA3495DB3AB6C486D496D
1380003F6E814A2F7AAE57>I<D83FF0EB7FC0007F903803FFF826FFF80F13FE023F7F4A
148091B6FC01F915C0ECF81F9026FBE00F13E0EBFFC04A7E1400A25BA35BB3AB6C486D13
C0123F2B2F7AAE38>I<EC3FFC0103B512C0011F14F8498090B7FC4816804816C048D9F8
1F13E048D9C00313F04A7E4890C713F8A24848EC7FFCA2007F16FE49143FA400FF16FFAD
007F16FE6D147FA36C6CECFFFCA26C6D4813F86E5A6CD9F00F13F06C90B612E0A26C16C0
C616006D5C011F14F8010714E09026007FFEC7FC30317DAF37>I<EDFF80263FF80F13E0
007F013F13F8486CB512FE01FD8090B71280A217C0ECE07FDA001F13E0497F4915F081A2
8117F8A281AE5D17F0A25DA217E05D6D4913C06D5B02C0B5128091B612005E5E01FD5C01
FC14E0023F1380DA07FCC7FC91C9FCB06C5A123F2D427AAE38>I<D83FF013F8007F1303
38FFF80F141F147FA214FF13F913FBA290B5120014F85C5C5C5C91C7FC5BA35BB3A76C5A
123F1D2F7AAE25>114 D<EB0FFF017F13F048B512FC000714FF4815C05AA2383FF80390
39F0007F80151F4848130F15071503ED01006D90C7FC7F13FEEBFFE014FF6C14C015F06C
80816C806C806C1580C6FC013F14C0130FD9007F13E0140714018012200070147F127812
7C127ED87F8013FF01E014C038FFFC0390B6FC16801600123F000F5C000314F8C614E001
0F90C7FC23317DAF2A>I<EBFFC05A487FAB003FEBFFFE5AB7FCA36C5CA2000301E0C7FC
B3AAED0180ECF00315079138F83FC06C90B5FCA36C150015FC6D13F0011F13C0D907FCC7
FC223C7EBA28>I<D83FF8903803FFC0127F486C4913E0B3AD5DA35D5DA26C6C5B6D48B5
FC6CEBFFF715E76C14C70007028313C06CEBFE0326003FF0C8FC2B2F7AAD38>I<D83FC0
EC1FE0D87FF0EC3FF000FFED7FF86C6CECFFF0A27F003F4A13E0A36D5B001F16C0A27F6C
4A1380A214806C4A1300A214C06C4A5AA214E06C4A5AA214F06C4A5AA214F8017F495AA3
80D93FFD5BA291B5FC6D5CA36D5CA36D91C7FCA36D5B010013F82D2E7EAD32>I<D83FC0
D901F8EC1FE0486CD903FEEC3FF0486C496CEC7FF87F007F4AEDFFF0A2836C6C4916E060
17C07F001F4A16C06017E06D147F6C027F4A1380A217F06CD980FE1600043F5B17F814C0
6C01C14B5A15FCEE1FFC14E16C01E34B5AA29238F80FFE6C01F75E187F17FF9138FFF007
6D4C5AA215E0826D5FA215C06D6E5CA34B7E6D90C75CD903FEDA3FFEC7FC452E7EAD4A>
I<D87FC0EC3FC0486CEC7FE06D14FF6D5BA26C7E4B13C06C7EA2001F4A13807F7E6E4813
00A26C13C05E6C141F14E06C5DECF03F7E5E14F8017F137F5EEB3FFCA2011F495AA28001
0F5CA26DB5FC5E7FA26D91C7FCA36D5BA2147F5D143FA26E5AA2143F5DA2147F5DA24A5A
A2EA6001D870035BD87C0F90C8FC007FB5FC5C5C5C6C5B14C091C9FCEA07FC2B427DAD32
>121 D<001FB612F84815FC4815FEA37E16FCC8FC4A13F84A13F0A24A13E04A13C01680
5C4A13004A5A5D14FF495B495BA2495B495B495BA24990C7FC495A5C13FF485B485B5C5A
485B485BA24890C8FC485A90B612FEB7FC16FFA36C15FE7E282E7DAD2F>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmssbx10 10 30
/Fi 30 122 df<DAFFE0EB7FF001079039FC03FFFE011F140F017F143F90B55B4892B5FC
DAE07CEBF03E48D9C01DEBE00EDA800DEBC0064802031400AC003F01FE14FF4801FF1580
B6FCA36C01FE15000007018014C0B3AC7E6C496C5B373B7FBA35>11
D<EAFFE0ABEA1FC0A2EA3F8013005A127E5AA25A0B14798A19>44
D<91380FFFC04A7F4A7FA24A7FA391B57EA3498015DF15CF4980158FA24901877FA21507
496D7FA214FE011F818114FC013F8181A2494880167FA2494880163FA2484980161FA248
498091B7FCA2481780A34817C0A291C71203484816E082A2484816F082A2484816F8177F
A2484816FC007FEE3FF801C0151F363A7DB93D>65 D<003FB512FE48ECFFE0B712F816FE
82178017C09026F0001F13E0030313F08181EE7FF8A2163FA5167F17F016FF17E05D0307
13C0037F138090B7120016FC16E016FEEEFF8017C09026F0000713F0030113F89238007F
FC163FEE1FFE160FA217FF82A55EA2EE1FFEA2163FEEFFFC150790B712F817F017E017C0
17006C15F86C1580303A79B93D>I<913801FFF8023FEBFFC049B612F8010715FE131F5B
5B48B712FC5AED801F489038F800014801E0EB007C4A143C4849140891C9FC5A5B5B127F
A25BA212FFA25BAC7FA2127FA27FA2123F7F7F7E6E14066C6D141E6E143E6C01F814FE6C
9039FF800FFF92B6FC7E6C7E7F6D15FC010715F8010115E0D9003F1400020113F8303C7B
BA3A>I<D83FFC93380FFF80486C4C13C0B55EA26E5DA26E92B5FCA36E5CA2D9DFF04A5A
A2D9CFF84A5AA3D9C7FC4A5AA26E141F01C35EA26E143F01C15E6F137FA201C05E6F13FF
027F5D6F5AA2023F5D6F5AA26E6C485AA2020F5CEDFC0FA202075CEDFE1F02035CA2EDFF
3F6E5CA26EEBFFC0A26F5BA36F90C7FCA26F5AA26F5A6F5A007F91C9FC6C48EF7F80423A
79B951>77 D<913807FFC0027F13FC0103B67E010F15E04981017F15FC4948C67F4801F8
EB3FFF4801E0010F13804A7F48496D13C04890C76C13E04980001F17F049157F003F17F8
49153FA2007F17FCA349151FA200FF17FEB0007F17FC6D153FA46C6CED7FF8A36C6CEDFF
F0A26C6C4A13E06E5B6C6D4913C06E5B6C01F8013F13806CD9FF01B512006C91B55A6D5D
6D5D010F15E001031580D9007F01FCC7FC020713C0373E7BBB42>79
D<003FB512FC48ECFFC0B712F88216FF178017C09026F0000F13E01503030013F0A2167F
17F8A2163FA5167FA217F016FF4B13E05D031F13C090B7128017005E16F816E093C7FCD9
F0077F80826E7F8082157F826F7EA26F7E150F826F1380A26F13C08117E06F13F0A2EE7F
F8A2EE3FFC161F127F6C48140F2E3A79B93A>82 D<90380FFF8090B512F0000714FC001F
14FF168016C0EBF003D9C00113E0EA0F00000E15F0000C7FC8FCA649B5FC133F90B6FC00
0313F8000F138048485A485A485AA2485AA45CA26D5A007F5BEBFC1F383FFFFEA26C13F8
6C5B00039038C07FE0C648C8FC24297DA72C>97 D<EA3FE0487E12FFB1EC1FE0ECFFF801
F313FE01F7EBFF8090B612C016E0EBFE07D9F80113F0497EED7FF8A3153F16FCAEED7FF8
A3EDFFF0A26D4813E0EBFE0790B612C016801600D87FF713FCD83FE113F0C7EA7F80263B
7BB92F>I<903803FFC0011F13FC017F13FF48B612C05A5A48EB807F3A1FFE001F804848
130715034990C7FC127FA25B12FFAD127F7F16C015016C6C130315076C6CEB1FE0390FFF
80FF91B5FC7E000115806CECFE00011F13F80103138023297DA729>I<ED1FF8ED3FFCB2
EB0FF0EB7FFE48B512BF4814FF5A5A481381393FFE007F49133FA2485AA3485AAE127F7F
A36C6C137F6D13FF381FFF816C90B5FC7E6C14BF6C143F3A007FFC1FF8D90FF0C7FC263B
7DB92F>I<903803FF80011F13F0017F13FC48B57E488048158048018113C04848C613E0
49137F4848EB3FF0A2485A151F16F812FFA25BA290B6FCA316F001E0C8FCA27FA2127FA3
7F003F15306D1470001FEC01F06C6C13079038FFC03F6C90B5FC7EC615C06D1400011F13
FC010113C025297EA72A>I<ECFFE0010713FC131F137F90B5FC5AECE07C48EBC01CEC80
0C481400AC003F13FE487FB6FCA36C5B00071380B3AC7E6C90C7FC1E3B7FBA1C>I<D90F
FFEB0F80017FEBE07F48B538F9FFC0000791B5FC5A481581D9FE07EB800048486C7F497E
A248486C7FA96C6C485BA26D5A6C6C485B90B6FC6C92C7FC6C5C15F8D80E7F13E0010F90
C8FC90CAFC120FA213C090B512FC6CECFFC016F016FC001F815A3A7FE0001FFF49130348
486D1380A281A46D5B6D5B6C6C49130001FC131F6CB65A6C5D6C5D000315E0C66C91C7FC
010713F02A397EA62E>I<EA3FE0487E12FFB1EC07F8EC3FFE91B5128001F114C001F314
E013F714C1D9FF0113F0497E5BA25BA25BB3A6127F6C48EB7FE0243A7BB92F>I<EA7FC0
EAFFE013F0A813E0EA7FC0C7FCA9EA3FE0EA7FF012FFB3B0127FEA3FE00C3B7CBA15>I<
EA3F80487E12FFB2EDFF80020313C05C4A13804A13004A5AEC7FF84A5A01C15B01C35B01
CF5B01DF90C7FCEBFFFE5C5C5C80A2808080A201F37F01E17F01C07FA26E7E6E7E6E7EA2
6E7E6E7E6E138016C0806E13E0007F147F6C48EB3FC0233A7BB92C>107
D<EA3FE0EA7FF012FFB3B3B2127FEA3FE00C3A7CB915>I<DA07FCEB03FE273FE01FFF90
380FFF80267FF07FD9C03F13E0D8FFF1B56CB512F001F302F114F801F714F302C114E0D9
FF009039FF807FFC496DEB003F495CA2495CA2495CB3A6007F023F141F6C486D48EB0FF8
3E277BA649>I<EC07F8393FE03FFE486CB51280D8FFF114C001F314E013F714C1D9FF01
13F0497E5BA25BA25BB3A6127F6C48EB7FE024277BA62F>I<903803FF80011F13F0017F
13FC48B6FC4815804815C048018313E04848C613F049137F4848EB3FF8A2007F15FC4913
1FA300FF15FEAC007F15FCA26D133FA2003F15F86D137F6C6CEBFFF0EBFF836C90B512E0
6C15C06C1580C6ECFE00013F13F80103138027297DA72E>I<EC1FE0393FE0FFF8D87FF3
13FED8FFF7EBFF8090B612C016E0EBFE07D9F80313F0497E6E13F8A2157FA216FC153FAC
157F16F8A215FF16F05C6D4813E0EBFE0F90B612C01680160001F713FC01F113F09038F0
7F8091C8FCAD127F6C5A26377BA62F>I<EC0780383FC03F387FE07F00FF13FF13E113E3
13E7A213EFECF000EBFFC091C7FC5B5B5BA35BB3A2127F6C5A19277CA61F>114
D<EB3FF848B51280000714E04814F85A5AA29038E00FF0007F1301EBC000153015007F7F
13FCEBFFE06C13FC14FF6C148015E07E6C14F0000114F86C7E011F13FC1300141F140F00
60130712701278127E007F130F39FFE01FF890B5FC15F0A2003F14E0000F14C000031400
38003FF81E297EA723>I<48B4FC487F5AA9003FEBFFC04814E0B6FCA36C14C00007EB80
00B3A6ECC03015706CEBE1F814FFA27E15E06C6C1300EB1FF01D327EB022>I<D83FE0EB
7FE0486CEBFFF012FFB3A75CA35CA26C6C5A141FEBFFFE6C5B6C5B00079038F07FE0C601
80C7FC24277BA52F>I<007FEC07F0D8FFC0EB0FF8151F7F007FEC3FF0A27F003FEC7FE0
A27F001FECFFC0A27F000F491380A36C6C481300A36C6C485AA314876CEB8FFCA214CF6C
EBDFF8A214FF6D5BA36D5BA36D5BA2010790C7FC25267EA52A>I<007F027E147F486C01
FFECFF806D6E5A5C01E014C0007F4C13005CA2D83FF002E05B17075C13F8001F9139DFF0
0FFCA2EC0FCFD80FFC02F85B171F141F158FD807FE903987FC3FF0A2143F01FF13076C6F
485A1503147F6C01FF01FF5B02FE14FF81A26C01FC5D81A36D4892C7FC826D485C6D486D
5A39267EA53E>I<D87F80EB07F0486CEB0FF86D131F6C7EED3FF0123F7F001FEC7FE07F
A26C6CEBFFC0A212076D4813807E028113006C1383A26CEBC3FEA214C790387FE7FCA213
3F5D131F14FF6D5BA36D5BA27F5D7FA26D5BA392C7FC5BA25C1303A2495AEA600F38781F
F8387FFFF0A25C5C91C8FC6C5AEA0FF025377EA52A>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmbx10 10 10
/Fj 10 119 df<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B
>46 D<141E143E14FE1307133FB5FCA313CFEA000FB3B3A6007FB61280A4213779B630>
49 D<EB0FFC90387FFFC048B512F0000714FC390FF03FFF261F800F1380263F000313C0
5AD9C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8FCEDFFF0A216E05C16C0
4A138016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F849481378495A495A495A01
3EC712F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA425377BB630>I<903803
FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC1FE05B00
3FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F6C6C14F8
6D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025257DA42C
>101 D<EA01F0EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3
A9B512F8A4153B7DBA1B>105 D<01FEEB7FC000FF903803FFF8020F13FE91381F03FFDA
3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430257DA4
35>110 D<903801FFC0010F13F8017F13FFD9FF807F3A03FE003FE048486D7E48486D7E
48486D7EA2003F81491303007F81A300FF1680A9007F1600A3003F5D6D1307001F5DA26C
6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029257DA430>I<
9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5CA29138807F80
ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>114 D<90383FF0383903FFFEF8
000F13FF381FC00F383F0003007E1301007C130012FC15787E7E6D130013FCEBFFE06C13
FCECFF806C14C06C14F06C14F81203C614FC131F9038007FFE140700F0130114007E157E
7E157C6C14FC6C14F8EB80019038F007F090B512C000F8140038E01FF81F257DA426>I<
B539F001FFF8A4000390C7EA3F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF0
01013F5C14F8011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15
FC6D5BA36E5AA26E5AA26E5AA26E5AA22D257EA432>118 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmtt10 10 33
/Fk 33 121 df<007FB6FCB71280A46C150021067B9B2C>45 D<121FEA3F80EA7FC0EAFF
E0A5EA7FC0EA3F80EA1F000B0B708A2C>I<EB0FFC90387FFF8048B512E0000714F84880
391FF807FEEBC0004848137F6D7F1680151FA26C5A6CC7FCC8FC153F16005D15FE14014A
5AEC1FF890381FFFF0495BA215F86D7F90380007FEEC00FF81ED3F80ED1FC0150FA216E0
1507A2123C127EB4FC150F16C0A248141F007FEC3F806DEB7F006C6C5B391FF807FE6CB5
5A6C5C6C14E0C66C1380D90FFCC7FC23357CB32C>51 D<EC07F04A7E141F143FA2147EA2
14FCEB01F8A2EB03F0EB07E0A2EB0FC0EB1F80A2EB3F00137EA25B485AA2485A5B120748
5AA2485A48C7FCA2127E5AB712FC16FEA36C15FCC8EAF800AA91387FFFF091B512F8A36E
13F027347EB32C>I<007FB512E015F8B612FE6C8016C03903F0003FED0FE0ED07F01503
A2ED01F8A6ED03F0A21507ED0FE0ED1FC0EDFF8090B612005D5D15FF16C09039F0001FE0
ED07F0ED03F81501ED00FCA216FE167EA616FE16FC1501ED03F8150FED3FF0007FB612E0
16C0B712806CECFE0015F027337FB22C>66 D<007FB5FCB612C015F0816C803907E003FE
EC00FFED7F80153FED1FC0ED0FE0A2150716F0150316F81501A4ED00FCACED01F8A31503
16F0A2150716E0150FED1FC0153FED7F80EDFF00EC03FE007FB55AB65A5D15C06C91C7FC
26337EB22C>68 D<D87FFCEB7FF8486CEBFFFCA36C48EB7FF8D807C0EB1F80153FED7F00
157E5D4A5A14034A5A5D4A5A4A5A143F4AC7FC147E5CEBC1F813C3EBC7FCA2EBCFFEEBDF
BEEBFFBF141F01FE7F496C7E13F86E7EEBF00301E07FEBC001816E7EA2157E153E153F81
1680ED0FC0A2ED07E0D87FFCEB1FFC486CEB3FFEA36C48EB1FFC27337EB22C>75
D<387FFFE0B57EA36C5BD803F0C8FCB3AE16F0ED01F8A8007FB6FCB7FCA36C15F025337D
B22C>I<D87FF0EB7FFC486CEBFFFEA27F007FEC7FFCD807FEEB07C013DEA213DF13CFA2
148013C714C0A213C314E0A213C114F0A213C014F8A2147CA3143EA2141E141FA2140F15
87A2140715C7A2140315E71401A215F71400A215FFD87FFC137F487E153FA26C48EB1F80
27337EB22C>78 D<90381FF80790B5EA0F804814CF000714FF5A381FF01F383FC003497E
48C7FC007E147F00FE143F5A151FA46CEC0F00007E91C7FC127F7FEA3FE0EA1FFCEBFFC0
6C13FC0003EBFFC06C14F06C6C7F01077F9038007FFEEC07FF02001380153FED1FC0A2ED
0FE0A20078140712FCA56CEC0FC0A26CEC1F806D133F01E0EB7F009038FE01FF90B55A5D
00F914F0D8F83F13C0D8700790C7FC23357CB32C>83 D<007FB612FCB712FEA43AFC007E
007EA70078153CC71400B3AF90383FFFFCA2497F6D5BA227337EB22C>I<3801FFF00007
13FE001F6D7E15E048809038C01FF81407EC01FC381F80000006C77EC8127EA3ECFFFE13
1F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E007F14FEEB8003383F
E01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>97
D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138F07FC09138801F
E091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036D
EB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F83900F03FC027337F
B22C>I<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A49137E4848
131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F003907FE
03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>I<EC0FFE4A7EA380EC003F
AAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F90C7FC007E
80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CECBFFE
6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381FFFC0017F13F048B57E4880
3907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E015075AB7FC
A416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001FF13
FF000190B512806C1500013F13FC010F13F00101138023247CA32C>I<EC0FF8EC3FFE91
B5FC4914805B903807FC7F14F090390FE03F0014C092C7FCA6007FB512FEB7FCA36C5C26
000FC0C7FCB3A8003FB512F04880A36C5C21337DB22C>I<ED03F8903907F80FFC90391F
FE3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1CD9C0001300
001F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D481480D99FFEC7
FCEB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F03A3FC0001FF848
C7EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F801303D83FE0EB
0FF8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028387EA42C>I<EA
7FF0487EA3127F1201AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC9138F03F80ECC01F02
807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029337FB22C>I<1307
EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007FB512
FCB612FEA36C14FC1F3479B32C>I<EA7FE0487EA3127F1201AA91381FFFF04A13F8A36E
13F0913800FE004A5A4A5A4A5A4A5A4A5A4A5A4AC7FC14FEEBF1FC13F3EBF7FE90B5FCA2
EC9F80EC0FC001FE7FEBFC07496C7E496C7E811400157E811680151F3A7FFFC0FFFCB500
E113FEA36C01C013FC27337EB22C>107 D<387FFFE0B57EA37EEA0003B3B3A5007FB612
80B712C0A36C158022337BB22C>I<3A7F83F007E09039CFFC1FF83AFFDFFE3FFCD87FFF
13FF91B57E3A07FE1FFC3E01FCEBF83F496C487E01F013E001E013C0A301C01380B33B7F
FC3FF87FF0027F13FFD8FFFE6D13F8D87FFC4913F0023F137F2D2481A32C>I<397FF01F
E039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807FEC000F5B5BA2
5BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C>I<EB07FCEB1FFF017F13C0
48B512F048803907FC07FC390FF001FE48486C7E0180133F003F158090C7121F007EEC0F
C0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F6C6CEB7F006D5B6C6C485A
3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247CA32C>I<397FF01FE039FF
F8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE091380007F049EB03F85BED
01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138
E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0B57EA36C5B27367FA3
2C>I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7FE1ECFF019138FC00
F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26247EA32C>114
D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36CEB00F0007F1400
13F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC00FE0078147F00
FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000F8148039701FFC
0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03C0ED07E0
A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE0232E7EAD2C>I<
3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F3900FE03FF90B7
FC6D15807F6D13CF902603FE07130029247FA32C>I<3A7FFF01FFFCB514FE148314016C
15FC3A03E0000F80A26D131F00011500A26D5B0000143EA26D137E017C137CA2017E13FC
013E5BA2EB3F01011F5BA21483010F5BA214C701075BA214EF01035BA214FF6D90C7FCA2
6D5A147C27247EA32C>I<D87FFFEB7FFF6EB5FCB515806C16004A7ED807C0EB01F0A66C
6C495AA3143E147FA2D801F0495AECFF87A214F7A201F113C700005D9038F9E3CFA201FB
13EFA3D97BC190C7FC017F13FFA21480A2013F5B90381F007C29247FA32C>I<3A3FFF03
FFF048018713F8A36C010313F03A00FC007E005D90387E01F8013F5BEB1F83EC87E09038
0FCFC0903807EF80EB03FF6D90C7FC5C6D5A147C14FE130180903803EF80903807CFC0EB
0FC7EC83E090381F01F0013F7FEB7E00017C137C49137E0001803A7FFF01FFFC1483B514
FE6C15FC140127247EA32C>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 @landscape
%%EndSetup
%%Page: 1 1
1 0 bop 2220 -282 a Fk(skak)31 b Fj(v)m(ersion)g(1.2)g
Fi(Reference)h(Manual)p 102 -249 5613 4 v 102 38 a Fh(Up)s(dating)37
b(the)f(b)s(oa)m(rd)102 185 y Fg(n)p Fi(newgame)102 285
y Ff(Initialises)27 b(the)h(b)r(oard)f(to)g(the)h(op)r(ening)f(p)r
(osition.)102 421 y Fg(n)p Fi(mainline)p Fg(f)p Fe(SAN)e(moves)p
Fg(g)102 521 y Ff(Up)r(dates)k(the)h(b)r(oard)f(with)h(the)g
Fe(SAN)g(moves)36 b Ff(and)29 b(t)n(yp)r(esets)h Fe(SAN)g(moves)35
b Ff(according)102 620 y(to)27 b(the)h(curren)n(t)f Fg(n)p
Fi(mainlinest)m(yle)p Ff(.)102 757 y Fg(n)p Fi(hidemoves)p
Fg(f)p Fe(SAN)e(moves)p Fg(g)102 857 y Ff(Up)r(dates)30
b(the)h(b)r(oard)e(with)i(the)f Fe(SAN)h(moves)36 b Ff(but)31
b(do)r(es)f Fd(not)38 b Ff(t)n(yp)r(eset)30 b(the)h(mo)n(v)n(es)d(|)102
956 y(this)j(is)g(useful)h(for)f(commen)n(ting)g(a)g(game)f(where)h(y)n
(ou)g(w)n(an)n(t)f(to)i(fo)r(cus)f(on)g(a)g(certain)102
1056 y(p)r(osition)c(after)g(some)g(mo)n(v)n(es)f(ha)n(v)n(e)h(already)
f(b)r(een)i(made.)102 1193 y Fg(n)p Fi(fenb)s(oa)m(rd)p
Fg(f)p Fe(FEN)c(p)r(osition)p Fg(g)102 1292 y Ff(Initialises)f(the)i(b)
r(oard)e(to)h(the)h(p)r(osition)f(describ)r(ed)f(with)i
Fe(FEN)f(p)r(osition)q Ff(.)35 b(The)24 b(format)102
1392 y(of)j(a)g(FEN)h(p)r(osition)f(is:)102 1492 y Fc(<)p
Fe(b)r(oa)n(rd)f(ro)n(ws)p Fc(>)h Fe(w)p Fg(j)p Fe(b)j
Fc(<)p Fe(castling)c(options)p Fc(>)f(<)p Fe(en)i(passant)g(squa)n(re)p
Fc(>)102 1591 y(<)p Fe(50)f(moves)h(counter)p Fc(>)g(<)p
Fe(move)g(numb)r(er)p Fc(>)102 1691 y Ff(The)g(FEN)h(for)f(the)h(op)r
(ening)f(p)r(osition)h(is)102 1790 y Fe(rnb)r
(qkbnr/pppppppp/8/8/8/8/PPPPPPPP/R)o(NBQKBNR)102 1890
y(w)f(K)n(Qkq)g(-)g(0)g(1)102 1990 y Ff(Note:)44 b(the)32
b(50)f(mo)n(v)n(es)f(coun)n(ter)g(is)i(not)f(used)h(b)n(y)f(the)h
Fk(skak)e Ff(game)g(engine,)j(but)f(it)g(is)102 2089
y(up)r(dated)c(to)f(sta)n(y)g(in)h(sync)f(with)h(external)f(programs.)
102 2309 y Fh(Describing)36 b(moves)102 2580 y Fg(n)p
Fi(va)m(riation)p Fg(f)p Fe(SAN)25 b(moves)p Fg(g)102
2679 y Ff(This)i(will)h(t)n(yp)r(eset)g Fe(SAN)g(moves)33
b Ff(using)27 b(the)h(curren)n(t)f Fg(n)p Fi(va)m(riationst)m(yle)p
Ff(.)102 2816 y Fg(n)p Fi(wmove)p Fg(f)p Fe(SAN)e(move)p
Fg(g)102 2916 y Ff(T)n(yp)r(esets)74 b Fe(SAN)h(move)80
b Ff(using)75 b(the)g(curren)n(t)f Fg(n)p Fi(va)m(riationst)m(yle)p
Ff(.)176 b(Example:)102 3028 y Fg(n)p Fk(wmove)p Fg(f)p
Fk(Nf3)p Fg(g)22 b Ff(giv)n(es)27 b Fb(N)p Ff(f3.)102
3165 y Fg(n)p Fi(bmove)p Fg(f)p Fe(SAN)e(move)p Fg(g)102
3264 y Ff(T)n(yp)r(esets)i Fe(SAN)h(move)34 b Ff(using)27
b(the)h(curren)n(t)f Fg(n)p Fi(va)m(riationst)m(yle)f
Ff(but)j(with)f(.)14 b(.)g(.)g(\(or)27 b(some-)102 3364
y(thing)j(similar)f(according)g(to)h(the)g(st)n(yle\))h(in)f(fron)n(t)g
(of)g(the)h(mo)n(v)n(e)e(|)h(can)g(b)r(e)g(used)h(to)102
3476 y(describ)r(e)c(a)g(single)g(blac)n(k)g(mo)n(v)n(e.)36
b(Example:)g Fg(n)p Fk(bmove)p Fg(f)p Fk(Nxd4)p Fg(g)22
b Ff(giv)n(es)27 b(.)13 b(.)h(.)g Fb(N)p Fa(X)p Ff(d4)102
3613 y Fg(n)p Fi(movecomment)p Fg(f)p Fe(Chess)21 b(moves)p
Fg(g)102 3712 y Ff(T)n(yp)r(esets)e(the)h Fe(Chess)g(moves)26
b Ff(using)20 b(the)g(curren)n(t)f Fg(n)p Fi(va)m(riationst)m(yle)p
Ff(,)h(but)g(do)r(esn't)g(c)n(hec)n(k)102 3812 y(for)27
b(mo)n(v)n(e)f(n)n(um)n(b)r(ers)h(lik)n(e)g Fg(n)p Fi(va)m(riation)f
Ff(do)r(es.)2949 38 y Fh(Sho)m(wing)37 b(the)f(b)s(oa)m(rd)2949
180 y Fg(n)p Fi(sho)m(wb)s(oa)m(rd)2949 280 y Ff(Sho)n(ws)27
b(the)h(curren)n(t)f(p)r(osition)g(from)h(whites)f(p)r(ersp)r(ectiv)n
(e.)2949 412 y Fg(n)p Fi(sho)m(winverseb)s(oa)m(rd)2949
511 y Ff(Sho)n(ws)g(the)h(curren)n(t)f(p)r(osition)g(from)h(blac)n(ks)e
(p)r(ersp)r(ectiv)n(e.)2949 721 y Fh(St)m(yle)37 b(selection)2949
863 y Fg(n)p Fi(st)m(yleA)2949 962 y Ff(Cho)r(oses)27
b(the)h Fe(st)n(yleA)f Ff(for)g(t)n(yp)r(esetting)h(of)g(mo)n(v)n(es.)
2949 1094 y Fg(n)p Fi(st)m(yleB)2949 1194 y Ff(Cho)r(oses)f(the)h
Fe(st)n(yleB)34 b Ff(for)27 b(t)n(yp)r(esetting)h(of)g(mo)n(v)n(es.)35
b(This)28 b(is)f(the)h(default)g(st)n(yle.)2949 1325
y Fg(n)p Fi(st)m(yleC)2949 1425 y Ff(Cho)r(oses)f(the)h
Fe(st)n(yleC)37 b Ff(for)27 b(t)n(yp)r(esetting)h(of)f(mo)n(v)n(es.)
2949 1634 y Fh(Size)38 b(of)e(the)h(b)s(oa)m(rd)2949
1776 y Fg(n)p Fi(no)m(rmalb)s(oa)m(rd)2949 1876 y Ff(The)28
b(default)g(size)f(of)h(the)g(b)r(oard)f(t)n(yp)r(eset)g(b)n(y)h(the)g
Fg(n)p Fi(sho)m(wb)s(oa)m(rd)d Ff(commands.)2949 2008
y Fg(n)p Fi(tinyb)s(oa)m(rd)2949 2107 y Ff(The)j Fg(n)p
Fi(sho)m(wb)s(oa)m(rd)d Ff(commands)i(will)h(b)r(e)g(t)n(yp)r(eset)g
(in)f(a)h(tin)n(y)f(fon)n(t.)2949 2239 y Fg(n)p Fi(smallb)s(oa)m(rd)
2949 2338 y Ff(The)h Fg(n)p Fi(sho)m(wb)s(oa)m(rd)d Ff(commands)i(will)
h(b)r(e)g(t)n(yp)r(eset)g(in)f(a)h(small)f(fon)n(t.)2949
2470 y Fg(n)p Fi(la)m(rgeb)s(oa)m(rd)2949 2570 y Ff(The)h
Fg(n)p Fi(sho)m(wb)s(oa)m(rd)d Ff(commands)i(will)h(b)r(e)g(t)n(yp)r
(eset)g(in)f(a)h(large)e(fon)n(t.)2949 2779 y Fh(Notation)38
b(and)e(mover)2949 2921 y Fg(n)p Fi(notationOn)2949 3021
y Ff(The)28 b Fg(n)p Fi(sho)m(wb)s(oa)m(rd)d Ff(commands)i(sho)n(w)g
(rank)f(and)i(\014le)g(names.)36 b(This)28 b(is)f(the)h(default.)2949
3153 y Fg(n)p Fi(notationO\013)2949 3252 y Ff(The)g Fg(n)p
Fi(sho)m(wb)s(oa)m(rd)d Ff(commands)i(sho)n(w)g(only)g(the)h(b)r(oard.)
2949 3384 y Fg(n)p Fi(sho)m(wmoverOn)2949 3483 y Ff(The)23
b Fg(n)p Fi(sho)m(wb)s(oa)m(rd)d Ff(commands)i(indicate)h(|)f(with)h(a)
f(small)h(b)r(o)n(x)f(|)g(whic)n(h)h(pla)n(y)n(er)e(has)2949
3583 y(to)28 b(mo)n(v)n(e.)2949 3715 y Fg(n)p Fi(sho)m(wmoverO\013)2949
3814 y Ff(The)g(dual)g(of)34 b Fg(n)p Fi(sho)m(wmoverOn)p
Ff(.)2887 4113 y(1)p eop
%%Page: 2 2
2 1 bop 2220 -282 a Fk(skak)31 b Fj(v)m(ersion)g(1.2)g
Fi(Reference)h(Manual)p 102 -249 5613 4 v 102 38 a Fh(Selective)k(sho)m
(wing)h(of)g(pieces)102 174 y Fg(n)p Fi(sho)m(w)m(all)102
273 y Ff(Mak)n(es)26 b(the)i Fg(n)p Fi(sho)m(wb)s(oa)m(rd)d
Ff(commands)i(sho)n(w)g(all)g(pieces.)102 395 y Fg(n)p
Fi(sho)m(w)m(onlywhite)102 494 y Ff(The)g Fg(n)p Fi(sho)m(wb)s(oa)m(rd)
e Ff(commands)i(will)h(only)f(sho)n(w)g(the)h(white)g(pieces.)102
616 y Fg(n)p Fi(sho)m(w)m(onlyblack)102 715 y Ff(The)f
Fg(n)p Fi(sho)m(wb)s(oa)m(rd)e Ff(commands)i(will)h(only)f(sho)n(w)g
(the)h(blac)n(k)f(pieces.)102 837 y Fg(n)p Fi(sho)m(w)m(onlypa)m(wns)
102 936 y Ff(The)g Fg(n)p Fi(sho)m(wb)s(oa)m(rd)e Ff(commands)i(will)h
(only)f(sho)n(w)g(the)h(pa)n(wns.)102 1058 y Fg(n)p Fi(sho)m(w)m(only)q
Fg(f)p Fe(piece)d(names)p Fg(g)102 1157 y Ff(The)41 b(argumen)n(t)f
Fe(piece)g(names)48 b Ff(is)41 b(a)f(comma)h(separated)f(list)h(of)g
(names)g(of)g(pieces)102 1257 y(to)f(b)r(e)h(sho)n(wn)f(using)g(the)h
Fg(n)p Fi(sho)m(wb)s(oa)m(rd)d Ff(commands.)75 b(White)42
b(pieces)e(are)g(named)102 1357 y Fe(K,Q,R,B,N,P)34 b
Ff(and)27 b(blac)n(k's)g Fe(k,q,r,b,n,p)s Ff(.)102 1478
y Fg(n)p Fi(sho)m(w)m(allbut)p Fg(f)p Fe(piece)d(names)p
Fg(g)102 1578 y Ff(The)d(argumen)n(t)g Fe(piece)g(names)28
b Ff(is)22 b(a)f(comma)h(separated)e(list)i(of)g(names)f(of)h(pieces)g
(whic)n(h)102 1677 y(will)27 b Fd(not)36 b Ff(b)r(e)28
b(sho)n(wn)e(when)i(using)f(the)h Fg(n)p Fi(sho)m(wb)s(oa)m(rd)d
Ff(commands.)102 1866 y Fh(Move)36 b(a)m(rro)m(ws)102
2001 y Fg(n)p Fi(p)m(rinta)m(rro)m(w)q Fg(f)p Fe(from)p
Fg(gf)p Fe(to)p Fg(g)102 2101 y Ff(Dra)n(ws)22 b(an)i(arro)n(w)e(on)i
(the)g(last)g(t)n(yp)r(eset)g(b)r(oard)f(from)h(the)g(square)f
Fe(from)i Ff(to)f(the)h(square)102 2201 y Fe(to)5 b Ff(.)102
2322 y Fg(n)p Fi(highlight)p Fe([ms])i Fg(f)p Fe(squa)n(re)24
b(list)p Fg(g)102 2422 y Ff(The)i(comma)g(separated)g
Fe(squa)n(re)g(list)32 b Ff(will)27 b(b)n(y)f(default)i(b)r(e)f
(highligh)n(ted)f(using)g(a)g(thic)n(k)102 2521 y(frame)f(on)g(the)h
(last)g(t)n(yp)r(eset)f(b)r(oard.)36 b(The)25 b(optional)g(mark)n(er)f
(sym)n(b)r(ol)i Fe(ms)31 b Ff(can)26 b(b)r(e)g(one)102
2621 y(of)34 b(X,)h(x,)i(O)d(and)h(o)f(in)h(whic)n(h)g(case)f(a)g
(cross)f(or)h(a)h(circle)f(is)g(used)h(to)g(highligh)n(t)f(the)102
2721 y(square.)102 2820 y Fg(n)p Fi(p)m(rintknightmove)p
Fg(f)p Fe(from)p Fg(gf)p Fe(to)p Fg(g)102 2920 y Ff(Dra)n(ws)26
b(a)h(b)r(en)n(t)h(arro)n(w)e(from)h(the)h(square)e Fe(from)k
Ff(to)d(the)h(square)e Fe(to)5 b Ff(.)102 3109 y Fh(Customizations)102
3244 y Fg(n)p Fi(newsk)m(aklanguage)p Fg(f)p Fe(language)p
Fg(gf)p Fe(piecena)o(mes)p Fg(g)102 3344 y Ff(De\014nes)28
b(a)f(new)i Fe(language)j Ff(for)c(the)g(input)h(of)f(SAN)g(mo)n(v)n
(es.)37 b Fe(piecenames)c Ff(are)27 b(the)h(up-)102 3443
y(p)r(ercase)h(letters)i(used)g(for)f(the)h(pieces)f(in)h(the)g(order)f
(King,)h(Queen,)g(Ro)r(ok,)g(Bishop,)102 3543 y(Knigh)n(t,)24
b(P)n(a)n(wn.)34 b(Example:)h Fg(n)p Fk(newskaklanguage)o
Fg(f)p Fk(d)o(an)o(ish)o Fg(gf)o Fk(KD)o(TLS)o(B)p Fg(g)18
b Ff(de\014nes)24 b Fe(dan-)102 3643 y(ish)k Ff(as)f(a)g(new)h(input)g
(language.)102 3764 y Fg(n)p Fi(sk)m(aklanguage)p Fe([language])102
3864 y Ff(Cho)r(oses)e Fe(language)32 b Ff(as)27 b(new)g(input)i
(language)d(|)h(defaults)h(to)g Fe(english)q Ff(.)2949
38 y Fg(n)p Fi(mainlinest)m(yle)2949 138 y Ff(Activ)-5
b(ates)41 b(the)f(t)n(yp)r(esetting)g(st)n(yle)g(for)f(the)h(mainline)g
(|)g(this)h(command)e(can)h(b)r(e)2949 238 y(rede\014ned)28
b(if)g(sp)r(ecial)f(requiremen)n(ts)g(for)g(the)h(t)n(yp)r(esetting)f
(exists.)2949 355 y Fg(n)p Fi(va)m(riationst)m(yle)2949
455 y Ff(Similar)h(to)f Fg(n)p Fi(mainlinest)m(yle)f
Ff(just)i(for)f(the)h(t)n(yp)r(esetting)g(of)g(v)-5 b(ariations.)2949
637 y Fh(Game)37 b(sto)m(rage)2949 773 y Fg(n)p Fi(savegame)p
Fg(f)p Fe(\014le)24 b(name)p Fg(g)2949 872 y Ff(W)-7
b(rites)23 b(the)g(FEN)g(string)f(for)h(the)g(curren)n(t)f(p)r(osition)
h(on)f(the)h(b)r(oard)f(to)h(the)g(\014le)g Fc(<)p Fk(file)2949
972 y(name)p Fc(>)p Fk(.fen)2949 1090 y Fg(n)p Fi(loadgame)p
Fg(f)p Fe(\014le)h(name)p Fg(g)2949 1190 y Ff(Load)j(the)h(p)r(osition)
f(stored)g(in)h(the)g(\014le)g Fc(<)p Fk(file)41 b(name)p
Fc(>)p Fk(.fen)2949 1308 y Fg(n)p Fi(sto)m(regame)p Fg(f)p
Fe(name)p Fg(g)2949 1407 y Ff(Stores)27 b(the)h(curren)n(t)f(game)g(p)r
(osition)g(using)h Fe(name)33 b Ff(as)27 b(reference.)2949
1525 y Fg(n)p Fi(resto)m(regame)p Fg(f)p Fe(name)p Fg(g)2949
1625 y Ff(Restores)g(the)h(game)f(previously)f(sa)n(v)n(ed)g(using)i
Fg(n)p Fi(sto)m(regame)p Ff(.)2949 1807 y Fh(P)m(ack)m(age)37
b(options)2949 1943 y Fi(ps)45 b Ff(Includes)g(the)g
Fk(ps-tricks)d Ff(pac)n(k)-5 b(age)43 b(in)i(order)f(to)h(mak)n(e)f
(ornamen)n(ts)f(on)i(the)2949 2042 y(b)r(oard.)60 b(Required)35
b(to)g(mak)n(e)g(the)h(follo)n(wing)e(commands)h(w)n(ork:)51
b Fg(n)p Fi(sho)m(wmoverOn)p Ff(,)2949 2142 y Fg(n)p
Fi(p)m(rinta)m(rro)m(w)q Ff(,)27 b Fg(n)p Fi(highlight)p
Ff(,)f Fg(n)p Fi(p)m(rintknightmove)p Ff(.)2949 2260
y Fi(pso\013)34 b Ff(Do)r(es)27 b Fd(not)36 b Ff(include)28
b(the)g Fk(ps-tricks)c Ff(pac)n(k)-5 b(age.)2949 2378
y Fi(mover)28 b Ff(Issues)f(the)h Fg(n)p Fi(sho)m(wmoveOn)d
Ff(command.)2949 2495 y Fi(movero\013)33 b Ff(Issues)27
b(the)h Fg(n)p Fi(sho)m(wmoveOn)d Ff(command.)2949 2613
y Fi(notation)g Ff(Issues)i(the)h Fg(n)p Fi(notationOn)d
Ff(command.)2949 2731 y Fi(english)30 b Ff(Mak)n(es)e(english)h(the)h
(preferred)e(input)j(language)c(|)j(the)g(only)f(de\014ned)h(lan-)2949
2831 y(guage)d(at)g(the)h(momen)n(t.)2949 2949 y Fi(st)m(yleA)g
Ff(Cho)r(oses)f Fg(n)p Fi(st)m(yleA)g Ff(st)n(yle)g(for)g(the)h(t)n(yp)
r(esetting)g(of)f(mo)n(v)n(es.)2949 3067 y Fi(st)m(yleB)h
Ff(Cho)r(oses)f Fg(n)p Fi(st)m(yleB)g Ff(st)n(yle)g(for)g(the)h(t)n(yp)
r(esetting)g(of)f(mo)n(v)n(es.)2949 3185 y Fi(st)m(yleC)i
Ff(Cho)r(oses)d Fg(n)p Fi(st)m(yleC)i Ff(st)n(yle)f(for)g(the)h(t)n(yp)
r(esetting)g(of)f(mo)n(v)n(es.)2949 3303 y Fi(tiny)h
Ff(The)g(b)r(oard)f(is)g(sho)n(wn)g(using)g(the)h(tin)n(y)g(size)f(fon)
n(t.)2949 3421 y Fi(small)g Ff(The)h(b)r(oard)e(is)i(sho)n(wn)f(using)g
(the)h(small)f(size)h(fon)n(t.)2949 3538 y Fi(no)m(rmal)e
Ff(The)i(b)r(oard)f(is)g(sho)n(wn)g(using)g(the)h(normal)f(size)g(fon)n
(t.)2949 3656 y Fi(la)m(rge)h Ff(The)g(b)r(oard)f(is)g(sho)n(wn)g
(using)g(the)h(large)e(size)i(fon)n(t.)2949 3847 y(The)g(default)g
(options)f(are)g Fi(notation,)h(no)m(rmal,)h(pso\013,)h(english,)h
(movero\013,)e(st)m(yleB)p Ff(.)2887 4113 y(2)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
